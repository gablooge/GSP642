/// <reference types="node" />
import * as gax from 'google-gax';
import { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Service for configuring sinks used to route log entries.
 * @class
 * @memberof v2
 */
export declare class ConfigServiceV2Client {
    private _terminated;
    private _opts;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    configServiceV2Stub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of ConfigServiceV2Client.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP fallback mode.
     *     In fallback mode, a special browser-compatible transport implementation is used
     *     instead of gRPC transport. In browser context (if the `window` object is defined)
     *     the fallback mode is enabled automatically; set `options.fallback` to `false`
     *     if you need to override this behavior.
     */
    constructor(opts?: ClientOptions);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath(),
     * exists for compatibility reasons.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    getBucket(request: protos.google.logging.v2.IGetBucketRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogBucket, protos.google.logging.v2.IGetBucketRequest | undefined, {} | undefined]>;
    getBucket(request: protos.google.logging.v2.IGetBucketRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogBucket, protos.google.logging.v2.IGetBucketRequest | null | undefined, {} | null | undefined>): void;
    getBucket(request: protos.google.logging.v2.IGetBucketRequest, callback: Callback<protos.google.logging.v2.ILogBucket, protos.google.logging.v2.IGetBucketRequest | null | undefined, {} | null | undefined>): void;
    createBucket(request: protos.google.logging.v2.ICreateBucketRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogBucket, protos.google.logging.v2.ICreateBucketRequest | undefined, {} | undefined]>;
    createBucket(request: protos.google.logging.v2.ICreateBucketRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogBucket, protos.google.logging.v2.ICreateBucketRequest | null | undefined, {} | null | undefined>): void;
    createBucket(request: protos.google.logging.v2.ICreateBucketRequest, callback: Callback<protos.google.logging.v2.ILogBucket, protos.google.logging.v2.ICreateBucketRequest | null | undefined, {} | null | undefined>): void;
    updateBucket(request: protos.google.logging.v2.IUpdateBucketRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogBucket, protos.google.logging.v2.IUpdateBucketRequest | undefined, {} | undefined]>;
    updateBucket(request: protos.google.logging.v2.IUpdateBucketRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogBucket, protos.google.logging.v2.IUpdateBucketRequest | null | undefined, {} | null | undefined>): void;
    updateBucket(request: protos.google.logging.v2.IUpdateBucketRequest, callback: Callback<protos.google.logging.v2.ILogBucket, protos.google.logging.v2.IUpdateBucketRequest | null | undefined, {} | null | undefined>): void;
    deleteBucket(request: protos.google.logging.v2.IDeleteBucketRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteBucketRequest | undefined, {} | undefined]>;
    deleteBucket(request: protos.google.logging.v2.IDeleteBucketRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteBucketRequest | null | undefined, {} | null | undefined>): void;
    deleteBucket(request: protos.google.logging.v2.IDeleteBucketRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteBucketRequest | null | undefined, {} | null | undefined>): void;
    undeleteBucket(request: protos.google.logging.v2.IUndeleteBucketRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.logging.v2.IUndeleteBucketRequest | undefined, {} | undefined]>;
    undeleteBucket(request: protos.google.logging.v2.IUndeleteBucketRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IUndeleteBucketRequest | null | undefined, {} | null | undefined>): void;
    undeleteBucket(request: protos.google.logging.v2.IUndeleteBucketRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IUndeleteBucketRequest | null | undefined, {} | null | undefined>): void;
    getView(request: protos.google.logging.v2.IGetViewRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogView, protos.google.logging.v2.IGetViewRequest | undefined, {} | undefined]>;
    getView(request: protos.google.logging.v2.IGetViewRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogView, protos.google.logging.v2.IGetViewRequest | null | undefined, {} | null | undefined>): void;
    getView(request: protos.google.logging.v2.IGetViewRequest, callback: Callback<protos.google.logging.v2.ILogView, protos.google.logging.v2.IGetViewRequest | null | undefined, {} | null | undefined>): void;
    createView(request: protos.google.logging.v2.ICreateViewRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogView, protos.google.logging.v2.ICreateViewRequest | undefined, {} | undefined]>;
    createView(request: protos.google.logging.v2.ICreateViewRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogView, protos.google.logging.v2.ICreateViewRequest | null | undefined, {} | null | undefined>): void;
    createView(request: protos.google.logging.v2.ICreateViewRequest, callback: Callback<protos.google.logging.v2.ILogView, protos.google.logging.v2.ICreateViewRequest | null | undefined, {} | null | undefined>): void;
    updateView(request: protos.google.logging.v2.IUpdateViewRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogView, protos.google.logging.v2.IUpdateViewRequest | undefined, {} | undefined]>;
    updateView(request: protos.google.logging.v2.IUpdateViewRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogView, protos.google.logging.v2.IUpdateViewRequest | null | undefined, {} | null | undefined>): void;
    updateView(request: protos.google.logging.v2.IUpdateViewRequest, callback: Callback<protos.google.logging.v2.ILogView, protos.google.logging.v2.IUpdateViewRequest | null | undefined, {} | null | undefined>): void;
    deleteView(request: protos.google.logging.v2.IDeleteViewRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteViewRequest | undefined, {} | undefined]>;
    deleteView(request: protos.google.logging.v2.IDeleteViewRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteViewRequest | null | undefined, {} | null | undefined>): void;
    deleteView(request: protos.google.logging.v2.IDeleteViewRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteViewRequest | null | undefined, {} | null | undefined>): void;
    getSink(request: protos.google.logging.v2.IGetSinkRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogSink, protos.google.logging.v2.IGetSinkRequest | undefined, {} | undefined]>;
    getSink(request: protos.google.logging.v2.IGetSinkRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogSink, protos.google.logging.v2.IGetSinkRequest | null | undefined, {} | null | undefined>): void;
    getSink(request: protos.google.logging.v2.IGetSinkRequest, callback: Callback<protos.google.logging.v2.ILogSink, protos.google.logging.v2.IGetSinkRequest | null | undefined, {} | null | undefined>): void;
    createSink(request: protos.google.logging.v2.ICreateSinkRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogSink, protos.google.logging.v2.ICreateSinkRequest | undefined, {} | undefined]>;
    createSink(request: protos.google.logging.v2.ICreateSinkRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogSink, protos.google.logging.v2.ICreateSinkRequest | null | undefined, {} | null | undefined>): void;
    createSink(request: protos.google.logging.v2.ICreateSinkRequest, callback: Callback<protos.google.logging.v2.ILogSink, protos.google.logging.v2.ICreateSinkRequest | null | undefined, {} | null | undefined>): void;
    updateSink(request: protos.google.logging.v2.IUpdateSinkRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogSink, protos.google.logging.v2.IUpdateSinkRequest | undefined, {} | undefined]>;
    updateSink(request: protos.google.logging.v2.IUpdateSinkRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogSink, protos.google.logging.v2.IUpdateSinkRequest | null | undefined, {} | null | undefined>): void;
    updateSink(request: protos.google.logging.v2.IUpdateSinkRequest, callback: Callback<protos.google.logging.v2.ILogSink, protos.google.logging.v2.IUpdateSinkRequest | null | undefined, {} | null | undefined>): void;
    deleteSink(request: protos.google.logging.v2.IDeleteSinkRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteSinkRequest | undefined, {} | undefined]>;
    deleteSink(request: protos.google.logging.v2.IDeleteSinkRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteSinkRequest | null | undefined, {} | null | undefined>): void;
    deleteSink(request: protos.google.logging.v2.IDeleteSinkRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteSinkRequest | null | undefined, {} | null | undefined>): void;
    getExclusion(request: protos.google.logging.v2.IGetExclusionRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.IGetExclusionRequest | undefined, {} | undefined]>;
    getExclusion(request: protos.google.logging.v2.IGetExclusionRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.IGetExclusionRequest | null | undefined, {} | null | undefined>): void;
    getExclusion(request: protos.google.logging.v2.IGetExclusionRequest, callback: Callback<protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.IGetExclusionRequest | null | undefined, {} | null | undefined>): void;
    createExclusion(request: protos.google.logging.v2.ICreateExclusionRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.ICreateExclusionRequest | undefined, {} | undefined]>;
    createExclusion(request: protos.google.logging.v2.ICreateExclusionRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.ICreateExclusionRequest | null | undefined, {} | null | undefined>): void;
    createExclusion(request: protos.google.logging.v2.ICreateExclusionRequest, callback: Callback<protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.ICreateExclusionRequest | null | undefined, {} | null | undefined>): void;
    updateExclusion(request: protos.google.logging.v2.IUpdateExclusionRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.IUpdateExclusionRequest | undefined, {} | undefined]>;
    updateExclusion(request: protos.google.logging.v2.IUpdateExclusionRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.IUpdateExclusionRequest | null | undefined, {} | null | undefined>): void;
    updateExclusion(request: protos.google.logging.v2.IUpdateExclusionRequest, callback: Callback<protos.google.logging.v2.ILogExclusion, protos.google.logging.v2.IUpdateExclusionRequest | null | undefined, {} | null | undefined>): void;
    deleteExclusion(request: protos.google.logging.v2.IDeleteExclusionRequest, options?: CallOptions): Promise<[protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteExclusionRequest | undefined, {} | undefined]>;
    deleteExclusion(request: protos.google.logging.v2.IDeleteExclusionRequest, options: CallOptions, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteExclusionRequest | null | undefined, {} | null | undefined>): void;
    deleteExclusion(request: protos.google.logging.v2.IDeleteExclusionRequest, callback: Callback<protos.google.protobuf.IEmpty, protos.google.logging.v2.IDeleteExclusionRequest | null | undefined, {} | null | undefined>): void;
    getCmekSettings(request: protos.google.logging.v2.IGetCmekSettingsRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ICmekSettings, protos.google.logging.v2.IGetCmekSettingsRequest | undefined, {} | undefined]>;
    getCmekSettings(request: protos.google.logging.v2.IGetCmekSettingsRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ICmekSettings, protos.google.logging.v2.IGetCmekSettingsRequest | null | undefined, {} | null | undefined>): void;
    getCmekSettings(request: protos.google.logging.v2.IGetCmekSettingsRequest, callback: Callback<protos.google.logging.v2.ICmekSettings, protos.google.logging.v2.IGetCmekSettingsRequest | null | undefined, {} | null | undefined>): void;
    updateCmekSettings(request: protos.google.logging.v2.IUpdateCmekSettingsRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ICmekSettings, protos.google.logging.v2.IUpdateCmekSettingsRequest | undefined, {} | undefined]>;
    updateCmekSettings(request: protos.google.logging.v2.IUpdateCmekSettingsRequest, options: CallOptions, callback: Callback<protos.google.logging.v2.ICmekSettings, protos.google.logging.v2.IUpdateCmekSettingsRequest | null | undefined, {} | null | undefined>): void;
    updateCmekSettings(request: protos.google.logging.v2.IUpdateCmekSettingsRequest, callback: Callback<protos.google.logging.v2.ICmekSettings, protos.google.logging.v2.IUpdateCmekSettingsRequest | null | undefined, {} | null | undefined>): void;
    listBuckets(request: protos.google.logging.v2.IListBucketsRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogBucket[], protos.google.logging.v2.IListBucketsRequest | null, protos.google.logging.v2.IListBucketsResponse]>;
    listBuckets(request: protos.google.logging.v2.IListBucketsRequest, options: CallOptions, callback: PaginationCallback<protos.google.logging.v2.IListBucketsRequest, protos.google.logging.v2.IListBucketsResponse | null | undefined, protos.google.logging.v2.ILogBucket>): void;
    listBuckets(request: protos.google.logging.v2.IListBucketsRequest, callback: PaginationCallback<protos.google.logging.v2.IListBucketsRequest, protos.google.logging.v2.IListBucketsResponse | null | undefined, protos.google.logging.v2.ILogBucket>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource whose buckets are to be listed:
     *
     *       "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
     *       "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
     *       "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
     *       "folders/[FOLDER_ID]/locations/[LOCATION_ID]"
     *
     *   Note: The locations portion of the resource must be specified, but
     *   supplying the character `-` in place of [LOCATION_ID] will return all
     *   buckets.
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [LogBucket]{@link google.logging.v2.LogBucket} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listBucketsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listBucketsStream(request?: protos.google.logging.v2.IListBucketsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listBuckets`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource whose buckets are to be listed:
     *
     *       "projects/[PROJECT_ID]/locations/[LOCATION_ID]"
     *       "organizations/[ORGANIZATION_ID]/locations/[LOCATION_ID]"
     *       "billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION_ID]"
     *       "folders/[FOLDER_ID]/locations/[LOCATION_ID]"
     *
     *   Note: The locations portion of the resource must be specified, but
     *   supplying the character `-` in place of [LOCATION_ID] will return all
     *   buckets.
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [LogBucket]{@link google.logging.v2.LogBucket}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listBucketsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listBucketsAsync(request?: protos.google.logging.v2.IListBucketsRequest, options?: CallOptions): AsyncIterable<protos.google.logging.v2.ILogBucket>;
    listViews(request: protos.google.logging.v2.IListViewsRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogView[], protos.google.logging.v2.IListViewsRequest | null, protos.google.logging.v2.IListViewsResponse]>;
    listViews(request: protos.google.logging.v2.IListViewsRequest, options: CallOptions, callback: PaginationCallback<protos.google.logging.v2.IListViewsRequest, protos.google.logging.v2.IListViewsResponse | null | undefined, protos.google.logging.v2.ILogView>): void;
    listViews(request: protos.google.logging.v2.IListViewsRequest, callback: PaginationCallback<protos.google.logging.v2.IListViewsRequest, protos.google.logging.v2.IListViewsResponse | null | undefined, protos.google.logging.v2.ILogView>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The bucket whose views are to be listed:
     *
     *       "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [LogView]{@link google.logging.v2.LogView} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listViewsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listViewsStream(request?: protos.google.logging.v2.IListViewsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listViews`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The bucket whose views are to be listed:
     *
     *       "projects/[PROJECT_ID]/locations/[LOCATION_ID]/buckets/[BUCKET_ID]"
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [LogView]{@link google.logging.v2.LogView}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listViewsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listViewsAsync(request?: protos.google.logging.v2.IListViewsRequest, options?: CallOptions): AsyncIterable<protos.google.logging.v2.ILogView>;
    listSinks(request: protos.google.logging.v2.IListSinksRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogSink[], protos.google.logging.v2.IListSinksRequest | null, protos.google.logging.v2.IListSinksResponse]>;
    listSinks(request: protos.google.logging.v2.IListSinksRequest, options: CallOptions, callback: PaginationCallback<protos.google.logging.v2.IListSinksRequest, protos.google.logging.v2.IListSinksResponse | null | undefined, protos.google.logging.v2.ILogSink>): void;
    listSinks(request: protos.google.logging.v2.IListSinksRequest, callback: PaginationCallback<protos.google.logging.v2.IListSinksRequest, protos.google.logging.v2.IListSinksResponse | null | undefined, protos.google.logging.v2.ILogSink>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource whose sinks are to be listed:
     *
     *       "projects/[PROJECT_ID]"
     *       "organizations/[ORGANIZATION_ID]"
     *       "billingAccounts/[BILLING_ACCOUNT_ID]"
     *       "folders/[FOLDER_ID]"
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [LogSink]{@link google.logging.v2.LogSink} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listSinksAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listSinksStream(request?: protos.google.logging.v2.IListSinksRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listSinks`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource whose sinks are to be listed:
     *
     *       "projects/[PROJECT_ID]"
     *       "organizations/[ORGANIZATION_ID]"
     *       "billingAccounts/[BILLING_ACCOUNT_ID]"
     *       "folders/[FOLDER_ID]"
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [LogSink]{@link google.logging.v2.LogSink}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listSinksAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listSinksAsync(request?: protos.google.logging.v2.IListSinksRequest, options?: CallOptions): AsyncIterable<protos.google.logging.v2.ILogSink>;
    listExclusions(request: protos.google.logging.v2.IListExclusionsRequest, options?: CallOptions): Promise<[protos.google.logging.v2.ILogExclusion[], protos.google.logging.v2.IListExclusionsRequest | null, protos.google.logging.v2.IListExclusionsResponse]>;
    listExclusions(request: protos.google.logging.v2.IListExclusionsRequest, options: CallOptions, callback: PaginationCallback<protos.google.logging.v2.IListExclusionsRequest, protos.google.logging.v2.IListExclusionsResponse | null | undefined, protos.google.logging.v2.ILogExclusion>): void;
    listExclusions(request: protos.google.logging.v2.IListExclusionsRequest, callback: PaginationCallback<protos.google.logging.v2.IListExclusionsRequest, protos.google.logging.v2.IListExclusionsResponse | null | undefined, protos.google.logging.v2.ILogExclusion>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource whose exclusions are to be listed.
     *
     *       "projects/[PROJECT_ID]"
     *       "organizations/[ORGANIZATION_ID]"
     *       "billingAccounts/[BILLING_ACCOUNT_ID]"
     *       "folders/[FOLDER_ID]"
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing [LogExclusion]{@link google.logging.v2.LogExclusion} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listExclusionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     */
    listExclusionsStream(request?: protos.google.logging.v2.IListExclusionsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listExclusions`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. The parent resource whose exclusions are to be listed.
     *
     *       "projects/[PROJECT_ID]"
     *       "organizations/[ORGANIZATION_ID]"
     *       "billingAccounts/[BILLING_ACCOUNT_ID]"
     *       "folders/[FOLDER_ID]"
     * @param {string} [request.pageToken]
     *   Optional. If present, then retrieve the next batch of results from the
     *   preceding call to this method. `pageToken` must be the value of
     *   `nextPageToken` from the previous response. The values of other method
     *   parameters should be identical to those in the previous call.
     * @param {number} [request.pageSize]
     *   Optional. The maximum number of results to return from this request.
     *   Non-positive values are ignored. The presence of `nextPageToken` in the
     *   response indicates that more results might be available.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows [async iteration](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols).
     *   When you iterate the returned iterable, each element will be an object representing
     *   [LogExclusion]{@link google.logging.v2.LogExclusion}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the
     *   [documentation](https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination)
     *   for more details and examples.
     * @example
     * const iterable = client.listExclusionsAsync(request);
     * for await (const response of iterable) {
     *   // process response
     * }
     */
    listExclusionsAsync(request?: protos.google.logging.v2.IListExclusionsRequest, options?: CallOptions): AsyncIterable<protos.google.logging.v2.ILogExclusion>;
    /**
     * Return a fully-qualified billingAccountCmekSettings resource name string.
     *
     * @param {string} billing_account
     * @returns {string} Resource name string.
     */
    billingAccountCmekSettingsPath(billingAccount: string): string;
    /**
     * Parse the billing_account from BillingAccountCmekSettings resource.
     *
     * @param {string} billingAccountCmekSettingsName
     *   A fully-qualified path representing billing_account_cmekSettings resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountCmekSettingsName(billingAccountCmekSettingsName: string): string | number;
    /**
     * Return a fully-qualified billingAccountExclusion resource name string.
     *
     * @param {string} billing_account
     * @param {string} exclusion
     * @returns {string} Resource name string.
     */
    billingAccountExclusionPath(billingAccount: string, exclusion: string): string;
    /**
     * Parse the billing_account from BillingAccountExclusion resource.
     *
     * @param {string} billingAccountExclusionName
     *   A fully-qualified path representing billing_account_exclusion resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountExclusionName(billingAccountExclusionName: string): string | number;
    /**
     * Parse the exclusion from BillingAccountExclusion resource.
     *
     * @param {string} billingAccountExclusionName
     *   A fully-qualified path representing billing_account_exclusion resource.
     * @returns {string} A string representing the exclusion.
     */
    matchExclusionFromBillingAccountExclusionName(billingAccountExclusionName: string): string | number;
    /**
     * Return a fully-qualified billingAccountLocationBucket resource name string.
     *
     * @param {string} billing_account
     * @param {string} location
     * @param {string} bucket
     * @returns {string} Resource name string.
     */
    billingAccountLocationBucketPath(billingAccount: string, location: string, bucket: string): string;
    /**
     * Parse the billing_account from BillingAccountLocationBucket resource.
     *
     * @param {string} billingAccountLocationBucketName
     *   A fully-qualified path representing billing_account_location_bucket resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountLocationBucketName(billingAccountLocationBucketName: string): string | number;
    /**
     * Parse the location from BillingAccountLocationBucket resource.
     *
     * @param {string} billingAccountLocationBucketName
     *   A fully-qualified path representing billing_account_location_bucket resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromBillingAccountLocationBucketName(billingAccountLocationBucketName: string): string | number;
    /**
     * Parse the bucket from BillingAccountLocationBucket resource.
     *
     * @param {string} billingAccountLocationBucketName
     *   A fully-qualified path representing billing_account_location_bucket resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromBillingAccountLocationBucketName(billingAccountLocationBucketName: string): string | number;
    /**
     * Return a fully-qualified billingAccountLocationBucketView resource name string.
     *
     * @param {string} billing_account
     * @param {string} location
     * @param {string} bucket
     * @param {string} view
     * @returns {string} Resource name string.
     */
    billingAccountLocationBucketViewPath(billingAccount: string, location: string, bucket: string, view: string): string;
    /**
     * Parse the billing_account from BillingAccountLocationBucketView resource.
     *
     * @param {string} billingAccountLocationBucketViewName
     *   A fully-qualified path representing billing_account_location_bucket_view resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountLocationBucketViewName(billingAccountLocationBucketViewName: string): string | number;
    /**
     * Parse the location from BillingAccountLocationBucketView resource.
     *
     * @param {string} billingAccountLocationBucketViewName
     *   A fully-qualified path representing billing_account_location_bucket_view resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromBillingAccountLocationBucketViewName(billingAccountLocationBucketViewName: string): string | number;
    /**
     * Parse the bucket from BillingAccountLocationBucketView resource.
     *
     * @param {string} billingAccountLocationBucketViewName
     *   A fully-qualified path representing billing_account_location_bucket_view resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromBillingAccountLocationBucketViewName(billingAccountLocationBucketViewName: string): string | number;
    /**
     * Parse the view from BillingAccountLocationBucketView resource.
     *
     * @param {string} billingAccountLocationBucketViewName
     *   A fully-qualified path representing billing_account_location_bucket_view resource.
     * @returns {string} A string representing the view.
     */
    matchViewFromBillingAccountLocationBucketViewName(billingAccountLocationBucketViewName: string): string | number;
    /**
     * Return a fully-qualified billingAccountLog resource name string.
     *
     * @param {string} billing_account
     * @param {string} log
     * @returns {string} Resource name string.
     */
    billingAccountLogPath(billingAccount: string, log: string): string;
    /**
     * Parse the billing_account from BillingAccountLog resource.
     *
     * @param {string} billingAccountLogName
     *   A fully-qualified path representing billing_account_log resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountLogName(billingAccountLogName: string): string | number;
    /**
     * Parse the log from BillingAccountLog resource.
     *
     * @param {string} billingAccountLogName
     *   A fully-qualified path representing billing_account_log resource.
     * @returns {string} A string representing the log.
     */
    matchLogFromBillingAccountLogName(billingAccountLogName: string): string | number;
    /**
     * Return a fully-qualified billingAccountSink resource name string.
     *
     * @param {string} billing_account
     * @param {string} sink
     * @returns {string} Resource name string.
     */
    billingAccountSinkPath(billingAccount: string, sink: string): string;
    /**
     * Parse the billing_account from BillingAccountSink resource.
     *
     * @param {string} billingAccountSinkName
     *   A fully-qualified path representing billing_account_sink resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountSinkName(billingAccountSinkName: string): string | number;
    /**
     * Parse the sink from BillingAccountSink resource.
     *
     * @param {string} billingAccountSinkName
     *   A fully-qualified path representing billing_account_sink resource.
     * @returns {string} A string representing the sink.
     */
    matchSinkFromBillingAccountSinkName(billingAccountSinkName: string): string | number;
    /**
     * Return a fully-qualified folderCmekSettings resource name string.
     *
     * @param {string} folder
     * @returns {string} Resource name string.
     */
    folderCmekSettingsPath(folder: string): string;
    /**
     * Parse the folder from FolderCmekSettings resource.
     *
     * @param {string} folderCmekSettingsName
     *   A fully-qualified path representing folder_cmekSettings resource.
     * @returns {string} A string representing the folder.
     */
    matchFolderFromFolderCmekSettingsName(folderCmekSettingsName: string): string | number;
    /**
     * Return a fully-qualified folderExclusion resource name string.
     *
     * @param {string} folder
     * @param {string} exclusion
     * @returns {string} Resource name string.
     */
    folderExclusionPath(folder: string, exclusion: string): string;
    /**
     * Parse the folder from FolderExclusion resource.
     *
     * @param {string} folderExclusionName
     *   A fully-qualified path representing folder_exclusion resource.
     * @returns {string} A string representing the folder.
     */
    matchFolderFromFolderExclusionName(folderExclusionName: string): string | number;
    /**
     * Parse the exclusion from FolderExclusion resource.
     *
     * @param {string} folderExclusionName
     *   A fully-qualified path representing folder_exclusion resource.
     * @returns {string} A string representing the exclusion.
     */
    matchExclusionFromFolderExclusionName(folderExclusionName: string): string | number;
    /**
     * Return a fully-qualified folderLocationBucket resource name string.
     *
     * @param {string} folder
     * @param {string} location
     * @param {string} bucket
     * @returns {string} Resource name string.
     */
    folderLocationBucketPath(folder: string, location: string, bucket: string): string;
    /**
     * Parse the folder from FolderLocationBucket resource.
     *
     * @param {string} folderLocationBucketName
     *   A fully-qualified path representing folder_location_bucket resource.
     * @returns {string} A string representing the folder.
     */
    matchFolderFromFolderLocationBucketName(folderLocationBucketName: string): string | number;
    /**
     * Parse the location from FolderLocationBucket resource.
     *
     * @param {string} folderLocationBucketName
     *   A fully-qualified path representing folder_location_bucket resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromFolderLocationBucketName(folderLocationBucketName: string): string | number;
    /**
     * Parse the bucket from FolderLocationBucket resource.
     *
     * @param {string} folderLocationBucketName
     *   A fully-qualified path representing folder_location_bucket resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromFolderLocationBucketName(folderLocationBucketName: string): string | number;
    /**
     * Return a fully-qualified folderLocationBucketView resource name string.
     *
     * @param {string} folder
     * @param {string} location
     * @param {string} bucket
     * @param {string} view
     * @returns {string} Resource name string.
     */
    folderLocationBucketViewPath(folder: string, location: string, bucket: string, view: string): string;
    /**
     * Parse the folder from FolderLocationBucketView resource.
     *
     * @param {string} folderLocationBucketViewName
     *   A fully-qualified path representing folder_location_bucket_view resource.
     * @returns {string} A string representing the folder.
     */
    matchFolderFromFolderLocationBucketViewName(folderLocationBucketViewName: string): string | number;
    /**
     * Parse the location from FolderLocationBucketView resource.
     *
     * @param {string} folderLocationBucketViewName
     *   A fully-qualified path representing folder_location_bucket_view resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromFolderLocationBucketViewName(folderLocationBucketViewName: string): string | number;
    /**
     * Parse the bucket from FolderLocationBucketView resource.
     *
     * @param {string} folderLocationBucketViewName
     *   A fully-qualified path representing folder_location_bucket_view resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromFolderLocationBucketViewName(folderLocationBucketViewName: string): string | number;
    /**
     * Parse the view from FolderLocationBucketView resource.
     *
     * @param {string} folderLocationBucketViewName
     *   A fully-qualified path representing folder_location_bucket_view resource.
     * @returns {string} A string representing the view.
     */
    matchViewFromFolderLocationBucketViewName(folderLocationBucketViewName: string): string | number;
    /**
     * Return a fully-qualified folderLog resource name string.
     *
     * @param {string} folder
     * @param {string} log
     * @returns {string} Resource name string.
     */
    folderLogPath(folder: string, log: string): string;
    /**
     * Parse the folder from FolderLog resource.
     *
     * @param {string} folderLogName
     *   A fully-qualified path representing folder_log resource.
     * @returns {string} A string representing the folder.
     */
    matchFolderFromFolderLogName(folderLogName: string): string | number;
    /**
     * Parse the log from FolderLog resource.
     *
     * @param {string} folderLogName
     *   A fully-qualified path representing folder_log resource.
     * @returns {string} A string representing the log.
     */
    matchLogFromFolderLogName(folderLogName: string): string | number;
    /**
     * Return a fully-qualified folderSink resource name string.
     *
     * @param {string} folder
     * @param {string} sink
     * @returns {string} Resource name string.
     */
    folderSinkPath(folder: string, sink: string): string;
    /**
     * Parse the folder from FolderSink resource.
     *
     * @param {string} folderSinkName
     *   A fully-qualified path representing folder_sink resource.
     * @returns {string} A string representing the folder.
     */
    matchFolderFromFolderSinkName(folderSinkName: string): string | number;
    /**
     * Parse the sink from FolderSink resource.
     *
     * @param {string} folderSinkName
     *   A fully-qualified path representing folder_sink resource.
     * @returns {string} A string representing the sink.
     */
    matchSinkFromFolderSinkName(folderSinkName: string): string | number;
    /**
     * Return a fully-qualified location resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @returns {string} Resource name string.
     */
    locationPath(project: string, location: string): string;
    /**
     * Parse the project from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLocationName(locationName: string): string | number;
    /**
     * Parse the location from Location resource.
     *
     * @param {string} locationName
     *   A fully-qualified path representing Location resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromLocationName(locationName: string): string | number;
    /**
     * Return a fully-qualified logMetric resource name string.
     *
     * @param {string} project
     * @param {string} metric
     * @returns {string} Resource name string.
     */
    logMetricPath(project: string, metric: string): string;
    /**
     * Parse the project from LogMetric resource.
     *
     * @param {string} logMetricName
     *   A fully-qualified path representing LogMetric resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromLogMetricName(logMetricName: string): string | number;
    /**
     * Parse the metric from LogMetric resource.
     *
     * @param {string} logMetricName
     *   A fully-qualified path representing LogMetric resource.
     * @returns {string} A string representing the metric.
     */
    matchMetricFromLogMetricName(logMetricName: string): string | number;
    /**
     * Return a fully-qualified organizationCmekSettings resource name string.
     *
     * @param {string} organization
     * @returns {string} Resource name string.
     */
    organizationCmekSettingsPath(organization: string): string;
    /**
     * Parse the organization from OrganizationCmekSettings resource.
     *
     * @param {string} organizationCmekSettingsName
     *   A fully-qualified path representing organization_cmekSettings resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationCmekSettingsName(organizationCmekSettingsName: string): string | number;
    /**
     * Return a fully-qualified organizationExclusion resource name string.
     *
     * @param {string} organization
     * @param {string} exclusion
     * @returns {string} Resource name string.
     */
    organizationExclusionPath(organization: string, exclusion: string): string;
    /**
     * Parse the organization from OrganizationExclusion resource.
     *
     * @param {string} organizationExclusionName
     *   A fully-qualified path representing organization_exclusion resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationExclusionName(organizationExclusionName: string): string | number;
    /**
     * Parse the exclusion from OrganizationExclusion resource.
     *
     * @param {string} organizationExclusionName
     *   A fully-qualified path representing organization_exclusion resource.
     * @returns {string} A string representing the exclusion.
     */
    matchExclusionFromOrganizationExclusionName(organizationExclusionName: string): string | number;
    /**
     * Return a fully-qualified organizationLocationBucket resource name string.
     *
     * @param {string} organization
     * @param {string} location
     * @param {string} bucket
     * @returns {string} Resource name string.
     */
    organizationLocationBucketPath(organization: string, location: string, bucket: string): string;
    /**
     * Parse the organization from OrganizationLocationBucket resource.
     *
     * @param {string} organizationLocationBucketName
     *   A fully-qualified path representing organization_location_bucket resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationLocationBucketName(organizationLocationBucketName: string): string | number;
    /**
     * Parse the location from OrganizationLocationBucket resource.
     *
     * @param {string} organizationLocationBucketName
     *   A fully-qualified path representing organization_location_bucket resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromOrganizationLocationBucketName(organizationLocationBucketName: string): string | number;
    /**
     * Parse the bucket from OrganizationLocationBucket resource.
     *
     * @param {string} organizationLocationBucketName
     *   A fully-qualified path representing organization_location_bucket resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromOrganizationLocationBucketName(organizationLocationBucketName: string): string | number;
    /**
     * Return a fully-qualified organizationLocationBucketView resource name string.
     *
     * @param {string} organization
     * @param {string} location
     * @param {string} bucket
     * @param {string} view
     * @returns {string} Resource name string.
     */
    organizationLocationBucketViewPath(organization: string, location: string, bucket: string, view: string): string;
    /**
     * Parse the organization from OrganizationLocationBucketView resource.
     *
     * @param {string} organizationLocationBucketViewName
     *   A fully-qualified path representing organization_location_bucket_view resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationLocationBucketViewName(organizationLocationBucketViewName: string): string | number;
    /**
     * Parse the location from OrganizationLocationBucketView resource.
     *
     * @param {string} organizationLocationBucketViewName
     *   A fully-qualified path representing organization_location_bucket_view resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromOrganizationLocationBucketViewName(organizationLocationBucketViewName: string): string | number;
    /**
     * Parse the bucket from OrganizationLocationBucketView resource.
     *
     * @param {string} organizationLocationBucketViewName
     *   A fully-qualified path representing organization_location_bucket_view resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromOrganizationLocationBucketViewName(organizationLocationBucketViewName: string): string | number;
    /**
     * Parse the view from OrganizationLocationBucketView resource.
     *
     * @param {string} organizationLocationBucketViewName
     *   A fully-qualified path representing organization_location_bucket_view resource.
     * @returns {string} A string representing the view.
     */
    matchViewFromOrganizationLocationBucketViewName(organizationLocationBucketViewName: string): string | number;
    /**
     * Return a fully-qualified organizationLog resource name string.
     *
     * @param {string} organization
     * @param {string} log
     * @returns {string} Resource name string.
     */
    organizationLogPath(organization: string, log: string): string;
    /**
     * Parse the organization from OrganizationLog resource.
     *
     * @param {string} organizationLogName
     *   A fully-qualified path representing organization_log resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationLogName(organizationLogName: string): string | number;
    /**
     * Parse the log from OrganizationLog resource.
     *
     * @param {string} organizationLogName
     *   A fully-qualified path representing organization_log resource.
     * @returns {string} A string representing the log.
     */
    matchLogFromOrganizationLogName(organizationLogName: string): string | number;
    /**
     * Return a fully-qualified organizationSink resource name string.
     *
     * @param {string} organization
     * @param {string} sink
     * @returns {string} Resource name string.
     */
    organizationSinkPath(organization: string, sink: string): string;
    /**
     * Parse the organization from OrganizationSink resource.
     *
     * @param {string} organizationSinkName
     *   A fully-qualified path representing organization_sink resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationSinkName(organizationSinkName: string): string | number;
    /**
     * Parse the sink from OrganizationSink resource.
     *
     * @param {string} organizationSinkName
     *   A fully-qualified path representing organization_sink resource.
     * @returns {string} A string representing the sink.
     */
    matchSinkFromOrganizationSinkName(organizationSinkName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified projectCmekSettings resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectCmekSettingsPath(project: string): string;
    /**
     * Parse the project from ProjectCmekSettings resource.
     *
     * @param {string} projectCmekSettingsName
     *   A fully-qualified path representing project_cmekSettings resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectCmekSettingsName(projectCmekSettingsName: string): string | number;
    /**
     * Return a fully-qualified projectExclusion resource name string.
     *
     * @param {string} project
     * @param {string} exclusion
     * @returns {string} Resource name string.
     */
    projectExclusionPath(project: string, exclusion: string): string;
    /**
     * Parse the project from ProjectExclusion resource.
     *
     * @param {string} projectExclusionName
     *   A fully-qualified path representing project_exclusion resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectExclusionName(projectExclusionName: string): string | number;
    /**
     * Parse the exclusion from ProjectExclusion resource.
     *
     * @param {string} projectExclusionName
     *   A fully-qualified path representing project_exclusion resource.
     * @returns {string} A string representing the exclusion.
     */
    matchExclusionFromProjectExclusionName(projectExclusionName: string): string | number;
    /**
     * Return a fully-qualified projectLocationBucket resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} bucket
     * @returns {string} Resource name string.
     */
    projectLocationBucketPath(project: string, location: string, bucket: string): string;
    /**
     * Parse the project from ProjectLocationBucket resource.
     *
     * @param {string} projectLocationBucketName
     *   A fully-qualified path representing project_location_bucket resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationBucketName(projectLocationBucketName: string): string | number;
    /**
     * Parse the location from ProjectLocationBucket resource.
     *
     * @param {string} projectLocationBucketName
     *   A fully-qualified path representing project_location_bucket resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationBucketName(projectLocationBucketName: string): string | number;
    /**
     * Parse the bucket from ProjectLocationBucket resource.
     *
     * @param {string} projectLocationBucketName
     *   A fully-qualified path representing project_location_bucket resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromProjectLocationBucketName(projectLocationBucketName: string): string | number;
    /**
     * Return a fully-qualified projectLocationBucketView resource name string.
     *
     * @param {string} project
     * @param {string} location
     * @param {string} bucket
     * @param {string} view
     * @returns {string} Resource name string.
     */
    projectLocationBucketViewPath(project: string, location: string, bucket: string, view: string): string;
    /**
     * Parse the project from ProjectLocationBucketView resource.
     *
     * @param {string} projectLocationBucketViewName
     *   A fully-qualified path representing project_location_bucket_view resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLocationBucketViewName(projectLocationBucketViewName: string): string | number;
    /**
     * Parse the location from ProjectLocationBucketView resource.
     *
     * @param {string} projectLocationBucketViewName
     *   A fully-qualified path representing project_location_bucket_view resource.
     * @returns {string} A string representing the location.
     */
    matchLocationFromProjectLocationBucketViewName(projectLocationBucketViewName: string): string | number;
    /**
     * Parse the bucket from ProjectLocationBucketView resource.
     *
     * @param {string} projectLocationBucketViewName
     *   A fully-qualified path representing project_location_bucket_view resource.
     * @returns {string} A string representing the bucket.
     */
    matchBucketFromProjectLocationBucketViewName(projectLocationBucketViewName: string): string | number;
    /**
     * Parse the view from ProjectLocationBucketView resource.
     *
     * @param {string} projectLocationBucketViewName
     *   A fully-qualified path representing project_location_bucket_view resource.
     * @returns {string} A string representing the view.
     */
    matchViewFromProjectLocationBucketViewName(projectLocationBucketViewName: string): string | number;
    /**
     * Return a fully-qualified projectLog resource name string.
     *
     * @param {string} project
     * @param {string} log
     * @returns {string} Resource name string.
     */
    projectLogPath(project: string, log: string): string;
    /**
     * Parse the project from ProjectLog resource.
     *
     * @param {string} projectLogName
     *   A fully-qualified path representing project_log resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectLogName(projectLogName: string): string | number;
    /**
     * Parse the log from ProjectLog resource.
     *
     * @param {string} projectLogName
     *   A fully-qualified path representing project_log resource.
     * @returns {string} A string representing the log.
     */
    matchLogFromProjectLogName(projectLogName: string): string | number;
    /**
     * Return a fully-qualified projectSink resource name string.
     *
     * @param {string} project
     * @param {string} sink
     * @returns {string} Resource name string.
     */
    projectSinkPath(project: string, sink: string): string;
    /**
     * Parse the project from ProjectSink resource.
     *
     * @param {string} projectSinkName
     *   A fully-qualified path representing project_sink resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectSinkName(projectSinkName: string): string | number;
    /**
     * Parse the sink from ProjectSink resource.
     *
     * @param {string} projectSinkName
     *   A fully-qualified path representing project_sink resource.
     * @returns {string} A string representing the sink.
     */
    matchSinkFromProjectSinkName(projectSinkName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
